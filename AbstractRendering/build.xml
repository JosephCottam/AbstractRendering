<project name="AbstractRendering" default="build" basedir=".">
  <property name="bin" value="bin"/>
  <property name="appSrc" value="app"/>
  <property name="appBin" value="${bin}/appBin" />
  <property name="appJar" value="ARApp.jar" />
  <property name="extSrc" value="ext"/>
  <property name="coreSrc" value="core"/>
  <property name="coreBin" value="${bin}/coreBin" />
  <property name="coreJar" value="AR.jar" />
  <property name="docs" value="docs" />
  <property name="lib" value="./lib"/>
  
  <target name="build" depends="clean,depends,core,app" />

  <target name="clean">
    <delete dir="${bin}"/>
    <delete dir="${docs}"/>
    <delete file="AR.jar"/>
    <delete file="ARApp.jar"/>
  </target>

  <target name="core" depends="depends">
    <antcall target="compile">
      <param name="src" value="${coreSrc}"/>
      <param name="target" value="${coreBin}"/>
      <param name="jars" value=""/>
      <param name="ver" value="1.7"/>
    </antcall>
    <antcall target="package">
      <param name="file" value="${coreJar}"/>
      <param name="bin" value="${coreBin}"/>
      <param name="main" value=""/>
    </antcall>
    <antcall target="_docs">
      <param name="src" value="${coreSrc}"/>
      <param name="jars" value=""/>
    </antcall>
  </target>

  <target name="docs">
    <antcall target="_docs">
      <param name="src" value="${coreSrc}"/>
      <param name="jars" value=""/>
    </antcall>
  </target>

  <target name="onesix" depends="clean,depends">
    <mkdir dir="${coreBin}"/>
    
    <javac destdir="${coreBin}" source="1.6" target="1.6" includeantruntime="false"
      sourcepath="" srcdir="${coreSrc}:${extSrc}">
      <exclude name="**/ARServer*"/> 
      <exclude name="**/Parallel*"/>
      <exclude name="**/MemMapList*"/> 
      <classpath>
        <fileset dir="${lib}" includes="*.jar"/>
      </classpath>
    </javac>
    
    <antcall target="package">
      <param name="file" value="${coreJar}"/>
      <param name="bin" value="${coreBin}"/>
      <param name="main" value="ar.ext.server.ARServer"/>
    </antcall>
    <antcall target="_docs">
      <param name="src" value="${coreSrc}:${appSrc}:${extSrc}"/>
      <param name="jars" value="${lib}"/>
    </antcall>
  </target>

  <target name="ext" depends="depends">
    <antcall target="compile">
      <param name="src" value="${coreSrc}:${extSrc}"/>
      <param name="target" value="${coreBin}"/>
      <param name="jars" value="${lib}"/>
      <param name="ver" value="1.7"/>
    </antcall>
    <antcall target="package">
      <param name="file" value="${coreJar}"/>
      <param name="bin" value="${coreBin}"/>
      <param name="main" value="ar.ext.server.ARServer"/>
    </antcall>
    <antcall target="_docs">
      <param name="src" value="${coreSrc}:${appSrc}:${extSrc}"/>
      <param name="jars" value="${lib}"/>
    </antcall>
  </target>

  <target name="app" depends="core">
    <antcall target="compile">
      <param name="src" value="${appSrc}"/>
      <param name="target" value="${appBin}"/>
      <param name="jars" value="."/>
      <param name="ver" value="1.7"/>
    </antcall>
    <antcall target="package">
      <param name="file" value="${appJar}"/>
      <param name="bin" value="${appBin}"/>
      <param name="main" value="ar.app.ARApp"/>
      <param name="classpath" value="AR.jar"/>
    </antcall>
  </target>

  <target name="compile">
    <mkdir dir="${target}"/>
    <javac destdir="${target}" source="${ver}" target="${ver}" includeantruntime="false"
      sourcepath="" srcdir="${src}">
      <classpath>
        <fileset dir="${jars}" includes="*.jar"/>
      </classpath>
    </javac>
  </target>

  <target name="_docs" depends="depends">
    <javadoc sourcepath="${src}" destdir="${docs}">
      <doclet name="com.visural.doclets.markdown.standard.Standard" path="${lib}/MarkdownDoclet.jar"/>
      <classpath>
        <fileset dir="${jars}" includes="*.jar"/>
      </classpath>
    </javadoc>
  </target>

  <target name="package" depends="depends">
    <jar jarfile="${file}" includes="*.class" basedir=".">
      <fileset dir="${bin}"/>
      <manifest>
        <attribute name="Created-By" value=""/>
        <attribute name="Main-Class" value="${main}"/>
        <attribute name="Class-Path" value="${classpath}"/>
      </manifest>
    </jar>
  </target>

  <include file="ivy-ant.xml" as="ivy"/> 
  <target name="depends" depends="ivy.fetch"/>
  <target name="depends-dev" depends="ivy.fetch-dev"/>
  <target name="clean-deep" depends="clean,ivy.deep-clean"/>
  <target name="clean-depends">
    <delete dir="${lib}"/>
  </target>
</project>
