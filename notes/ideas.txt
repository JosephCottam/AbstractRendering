AR currently hands aggregates off as complete items.
This is not a requirement, it could hand of partial aggregates to the 
  transfer function (which can then show the intermediate result).
This would give faster feedback (still needs to do the bounds calc before 
  anything, but that is usually OK-fast).  However, it brings
  in questions of consistency.   Are such partial renderings "valid"?
  Useful even if invalid? 
This may form a basis for AR over streaming data, and might provide
  a way for very fast "delete" (aggregate reducer that provides specifically
  for removal of information).


Distributed rendering engine built around aggregate reducers.  All
nodes in the distributed group receive the same view transform and
aggregator, but they hold a different subset of the data.  Reduction
tree is built around aggregate reduction.  Aggregates handed off to an
IO or remote node for transfer function (e.g., final rendering).


Image-based analysis.  Aggregates that represent colors are images.
Therefore, the AR framework provides a simple location for doing
image-based analysis.  Also provides a natural extension to metrics
based on discretized regions if you do measurements on non-color functions
(like 2D distribution of the counts).  This can be used as a basis for 
"data tours" where appropriate views or transform functions are 
selected/generated based on the properties of the aggregate set.


"Enhance" button:  Select a region of the plot and re-project the transfer
function using just the selected region as the data basis.  Everything
happens in transfer.
